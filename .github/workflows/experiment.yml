# This is a basic workflow to help you get started with Actions

name: Experimental

# Controls when the action will run. 
on:
  push:
  workflow_dispatch:
    inputs:
        release-version:
          description: 'Release Version'
          type: string
          required: false
          default: '4.0.0'
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-2022

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set up MSBuild in PATH for command
      - name: Setup MSBuild in PATH
        uses: microsoft/setup-msbuild@v1
        
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      # Get NuGet setup for restoring, packaging and pushing
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        
      - name: Restore packages with NuGet
        run: nuget restore Unleash.sln
        
      # Get the versioning build variables in place
      - name: Set versioning build variables
        env:
          NUGET_VERSION: ${{ inputs.release-version }}
        run: |
          echo "nuget=${NUGET_VERSION}" >> $GITHUB_ENV
          echo "file=${NUGET_VERSION%-beta*}" >> $GITHUB_ENV
          echo "assembly=${NUGET_VERSION%-beta*}" >> $GITHUB_ENV
        shell: bash

      - name: Build the solution
        run: msbuild Unleash.sln /p:Configuration=Release /p:Version=${{ env.nuget }} /p:FileVersion=${{ env.file }} /p:AssemblyVersion=${{ env.assembly }}

      - name: output files
        run: find **\Unleash.Client.*.nupkg